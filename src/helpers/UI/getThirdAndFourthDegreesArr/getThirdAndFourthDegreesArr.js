/* функция принимает массив объектов 3 и 4 степеней (тип как в стейте)
    возвращает массив массивов для формирования книги 3 и 4 степеней
*/
import { definePicketByMeter } from "../../common/definePicketByMeter/definePicketByMeter";

export function getThirdAndFourthDegreesArr(data) {
    let dataToWrite = [];                                   //массив массивов для конвертации его в xslx и записи в выходную книгу

      // Шапка таблицы
      dataToWrite.push(["ПС", "№", "ПЧ", "Перегон", "ПУТЬ", "KM", "ПК/м", "СКОРОСТЬ установленная", "СКОРОСТЬ* ограничения пасс/груз.", "Время выдачи ограничения", "Степень отст.", "ПРИЧИНА", "Наличие повтора", "УСТРАНЕНИЕ", "УСТРАНЕНИЕ ПРОВЕРИЛ"]);

      data.forEach((item, i) => {
        const arr = [];                   // этот массив используется для пуша в него всех данных по одной неисправности, чтобы потом получить массив массивов всех неисправности и преобразовать его в лист excel

        const pkMetr = definePicketByMeter(item["М"]) + "/" + item["М"];      // пикет и метр в формате "5/214"
        const setSpeed = item["СК_УСТ_ПАСС"] + "/" + item["СК_УСТ_ГРУЗ"];     // установленная скорость в формате "80/80"

        // ------- скорость ограничения ------
        let limitingSpeed;
        if (item["СК_ОГР_ПАСС"] === "-") {
          if (item["СК_ОГР_ГРУЗ"] === "-") {
            limitingSpeed = "";
          } else {
            limitingSpeed = item["СК_ОГР_ПАСС"] + "/" + item["СК_ОГР_ГРУЗ"]
          }
        } else {
          limitingSpeed = item["СК_ОГР_ПАСС"] + "/" + item["СК_ОГР_ГРУЗ"]
        }
        // ------- / скорость ограничения ----

        const faultDecoding = item["ОТСТУПЛЕНИЕ"] + " " + item["АМПЛИТУДА"] + "/" + item["ДЛИНА"];  // причина неисправности в формате "П 16/12"

        arr.push(item["ПС"], ++i, item["ПЧ"], "", item["ПУТЬ"], item["KM"], pkMetr, setSpeed, limitingSpeed, "", item["СТЕПЕНЬ"], faultDecoding);   // массив одна неисправность
        dataToWrite.push(arr);        // запушим массив с одной неисправностью в массив со всеми неисправностями. Будем пошить каждую неисправность
      });
      
      return dataToWrite;
}